'use client';

import { useState } from 'react';
import { useRouter } from 'next/navigation';
import { Button } from '@/components/ui/button';
import {
  Card, CardContent, CardDescription, CardHeader, CardTitle
} from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { Textarea } from '@/components/ui/textarea';
import {
  Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger
} from '@/components/ui/dialog';
import { Label } from '@/components/ui/label';
import { ArrowLeft, BookPlus, FlipHorizontal } from 'lucide-react';

interface Flashcard {
  id: number;
  front: string;
  back: string;
  createdAt: string;
}

const FlashcardSetPage = ({ params }: { params: { setId: string } }) => {
  const { setId } = params;
  const router = useRouter();

  const [flashcards, setFlashcards] = useState<Flashcard[]>([
    {
      id: 1,
      front: 'Budget',
      back: 'A plan for spending money over a specific period',
      createdAt: '2024-01-15'
    },
    {
      id: 2,
      front: 'Revenue',
      back: 'The total amount of income generated by a business',
      createdAt: '2024-01-15'
    }
  ]);

  const [isAddDialogOpen, setIsAddDialogOpen] = useState(false);
  const [isBulkAddDialogOpen, setIsBulkAddDialogOpen] = useState(false);
  const [newCardFront, setNewCardFront] = useState('');
  const [newCardBack, setNewCardBack] = useState('');
  const [bulkCardsText, setBulkCardsText] = useState('');

  const handleAddSingleCard = () => {
    if (newCardFront.trim() && newCardBack.trim()) {
      const newCard: Flashcard = {
        id: Date.now(),
        front: newCardFront.trim(),
        back: newCardBack.trim(),
        createdAt: new Date().toISOString().split('T')[0]
      };
      setFlashcards([...flashcards, newCard]);
      setNewCardFront('');
      setNewCardBack('');
      setIsAddDialogOpen(false);
    }
  };

  const handleBulkAdd = () => {
    if (bulkCardsText.trim()) {
      const lines = bulkCardsText.trim().split('\n');
      const newCards: Flashcard[] = [];

      lines.forEach((line, index) => {
        const parts = line.split(' - ');
        if (parts.length >= 2) {
          const front = parts[0].trim();
          const back = parts.slice(1).join(' - ').trim();
          if (front && back) {
            newCards.push({
              id: Date.now() + index,
              front,
              back,
              createdAt: new Date().toISOString().split('T')[0]
            });
          }
        }
      });

      if (newCards.length > 0) {
        setFlashcards([...flashcards, ...newCards]);
        setBulkCardsText('');
        setIsBulkAddDialogOpen(false);
      }
    }
  };

  const handleDeleteCard = (id: number) => {
    setFlashcards(flashcards.filter(card => card.id !== id));
  };

  return (
    <div className="min-h-screen bg-gray-50 py-8">
      <div className="container mx-auto px-4 sm:px-6 lg:px-8">
        <div className="mb-6">
          <Button variant="ghost" onClick={() => router.push('/flashcards')} className="mb-4">
            <ArrowLeft className="h-4 w-4 mr-2" />
            Quay lại danh sách
          </Button>
        </div>

        <div className="flex justify-between items-center mb-8">
          <div>
            <h1 className="text-3xl font-bold text-gray-900 mb-2">
              Quản lý bộ Flashcard
            </h1>
            <p className="text-gray-600">{flashcards.length} thẻ trong bộ</p>
          </div>

          <div className="flex space-x-2">
            {/* Dialog thêm thẻ đơn */}
            <Dialog open={isAddDialogOpen} onOpenChange={setIsAddDialogOpen}>
              <DialogTrigger asChild>
                <Button variant="outline">
                  <BookPlus className="h-4 w-4 mr-2" />
                  Thêm thẻ
                </Button>
              </DialogTrigger>
              <DialogContent>
                <DialogHeader>
                  <DialogTitle>Thêm thẻ mới</DialogTitle>
                  <DialogDescription>
                    Nhập mặt trước và mặt sau của thẻ.
                  </DialogDescription>
                </DialogHeader>
                <div className="space-y-4">
                  <div>
                    <Label htmlFor="front">Mặt trước</Label>
                    <Input
                      id="front"
                      placeholder="Ví dụ: Budget"
                      value={newCardFront}
                      onChange={(e) => setNewCardFront(e.target.value)}
                    />
                  </div>
                  <div>
                    <Label htmlFor="back">Mặt sau</Label>
                    <Textarea
                      id="back"
                      placeholder="Định nghĩa hoặc giải nghĩa"
                      value={newCardBack}
                      onChange={(e) => setNewCardBack(e.target.value)}
                    />
                  </div>
                  <div className="flex justify-end space-x-2">
                    <Button variant="outline" onClick={() => setIsAddDialogOpen(false)}>Huỷ</Button>
                    <Button onClick={handleAddSingleCard} disabled={!newCardFront || !newCardBack}>Thêm</Button>
                  </div>
                </div>
              </DialogContent>
            </Dialog>

            {/* Dialog thêm nhiều thẻ */}
            <Dialog open={isBulkAddDialogOpen} onOpenChange={setIsBulkAddDialogOpen}>
              <DialogTrigger asChild>
                <Button variant="outline">
                  <BookPlus className="h-4 w-4 mr-2" />
                  Thêm nhiều
                </Button>
              </DialogTrigger>
              <DialogContent className="max-w-2xl">
                <DialogHeader>
                  <DialogTitle>Thêm nhiều thẻ</DialogTitle>
                  <DialogDescription>
                    Nhập theo định dạng: `Front - Back` (mỗi dòng một thẻ)
                  </DialogDescription>
                </DialogHeader>
                <div className="space-y-4">
                  <Label htmlFor="bulk">Danh sách thẻ</Label>
                  <Textarea
                    id="bulk"
                    placeholder={`Ví dụ:\nBudget - A plan for spending money\nRevenue - Total income`}
                    rows={8}
                    value={bulkCardsText}
                    onChange={(e) => setBulkCardsText(e.target.value)}
                  />
                  <div className="flex justify-end space-x-2">
                    <Button variant="outline" onClick={() => setIsBulkAddDialogOpen(false)}>Huỷ</Button>
                    <Button onClick={handleBulkAdd} disabled={!bulkCardsText.trim()}>Thêm</Button>
                  </div>
                </div>
              </DialogContent>
            </Dialog>

            <Button onClick={() => router.push(`/flashcards/${setId}/study`)}>
              <FlipHorizontal className="h-4 w-4 mr-2" />
              Ôn tập
            </Button>
          </div>
        </div>

        <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-4">
          {flashcards.map((card) => (
            <Card key={card.id} className="hover:shadow-md">
              <CardHeader className="pb-3">
                <CardTitle className="text-lg">{card.front}</CardTitle>
              </CardHeader>
              <CardContent>
                <CardDescription className="mb-4">{card.back}</CardDescription>
                <div className="flex justify-between items-center">
                  <span className="text-xs text-gray-500">
                    {new Date(card.createdAt).toLocaleDateString()}
                  </span>
                  <Button variant="destructive" size="sm" onClick={() => handleDeleteCard(card.id)}>Xoá</Button>
                </div>
              </CardContent>
            </Card>
          ))}
        </div>

        {flashcards.length === 0 && (
          <div className="text-center py-12">
            <p className="text-gray-500 text-lg mb-4">Chưa có thẻ nào trong bộ này.</p>
            <Dialog open={isAddDialogOpen} onOpenChange={setIsAddDialogOpen}>
              <DialogTrigger asChild>
                <Button>
                  <BookPlus className="h-4 w-4 mr-2" />
                  Thêm thẻ đầu tiên
                </Button>
              </DialogTrigger>
            </Dialog>
          </div>
        )}
      </div>
    </div>
  );
}

export default FlashcardSetPage;