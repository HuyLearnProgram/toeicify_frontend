'use client';

import { useState } from 'react';
import { useRouter } from 'next/navigation';
import { Button } from '@/components/ui/button';
import { Card, CardContent } from '@/components/ui/card';
import { ArrowLeft, FlipHorizontal } from 'lucide-react';

interface Flashcard {
    id: number;
    front: string;
    back: string;
}

export default function FlashcardStudyPage({ params }: { params: { id: string } }) {
    const { id } = params;
    const router = useRouter();

    const [flashcards] = useState<Flashcard[]>([
        {
            id: 1,
            front: 'Budget',
            back: 'A plan for spending money over a specific period',
        },
        {
            id: 2,
            front: 'Revenue',
            back: 'The total amount of income generated by a business',
        },
        {
            id: 3,
            front: 'Profit',
            back: 'The money that remains after all business expenses have been paid',
        },
    ]);

    const [currentIndex, setCurrentIndex] = useState(0);
    const [isFlipped, setIsFlipped] = useState(false);

    const currentCard = flashcards[currentIndex];

    const handleNext = () => {
        if (currentIndex < flashcards.length - 1) {
            setCurrentIndex(currentIndex + 1);
            setIsFlipped(false);
        }
    };

    const handlePrevious = () => {
        if (currentIndex > 0) {
            setCurrentIndex(currentIndex - 1);
            setIsFlipped(false);
        }
    };

    const handleFlip = () => {
        setIsFlipped(!isFlipped);
    };

    if (flashcards.length === 0) {
        return (
            <div className="min-h-screen bg-gray-50 py-8">
                <div className="container mx-auto px-4 sm:px-6 lg:px-8">
                    <Button variant="ghost" onClick={() => router.push(`/flashcards/${id}`)} className="mb-4">
                        <ArrowLeft className="h-4 w-4 mr-2" />
                        Quay lại bộ thẻ
                    </Button>
                    <div className="text-center py-12">
                        <p className="text-gray-500 text-lg">Không có thẻ nào để học trong bộ này.</p>
                    </div>
                </div>
            </div>
        );
    }

    return (
        <div className="min-h-screen bg-gray-50 py-8">
            <div className="container mx-auto px-4 sm:px-6 lg:px-8 max-w-2xl">
                <Button variant="ghost" onClick={() => router.push(`/flashcards/${id}`)} className="mb-6">
                    <ArrowLeft className="h-4 w-4 mr-2" />
                    Quay lại bộ thẻ
                </Button>

                <div className="text-center mb-8">
                    <h1 className="text-3xl font-bold text-gray-900 mb-4">Học Flashcards</h1>
                    <p className="text-gray-600">Thẻ {currentIndex + 1} / {flashcards.length}</p>
                </div>

                <div className="flex justify-center mb-8">
                    <div className="relative w-full max-w-md h-[300px] perspective">
                        <div
                            className={`relative w-full h-full duration-700 transform-style-preserve-3d transition-transform ${isFlipped ? 'rotate-y-180' : ''
                                }`}
                        >
                            {/* Mặt trước */}
                            <div className="absolute w-full h-full backface-hidden bg-white rounded-lg shadow-md flex flex-col justify-center items-center px-6">
                                <div className="text-xs text-gray-500 mb-2">MẶT TRƯỚC</div>
                                <div className="text-2xl font-semibold text-gray-900 text-center">{currentCard.front}</div>
                            </div>

                            {/* Mặt sau */}
                            <div className="absolute w-full h-full backface-hidden bg-blue-50 rounded-lg shadow-md transform rotate-y-180 flex flex-col justify-center items-center px-6">
                                <div className="text-xs text-gray-500 mb-2">MẶT SAU</div>
                                <div className="text-lg text-gray-700 text-center leading-relaxed">{currentCard.back}</div>
                            </div>
                        </div>
                    </div>

                </div>

                <div className="flex justify-center mb-8">
                    <Button onClick={handleFlip} className="flex items-center gap-2">
                        <FlipHorizontal className="h-4 w-4" />
                        Lật thẻ
                    </Button>
                </div>

                <div className="flex justify-between items-center">
                    <Button onClick={handlePrevious} disabled={currentIndex === 0} variant="outline">
                        Trước
                    </Button>

                    <div className="flex space-x-1">
                        {flashcards.map((_, index) => (
                            <div
                                key={index}
                                className={`w-3 h-3 rounded-full ${index === currentIndex ? 'bg-blue-500' : 'bg-gray-300'}`}
                            />
                        ))}
                    </div>

                    <Button onClick={handleNext} disabled={currentIndex === flashcards.length - 1} variant="outline">
                        Tiếp
                    </Button>
                </div>

                {currentIndex === flashcards.length - 1 && (
                    <div className="text-center mt-8">
                        <p className="text-gray-600 mb-4">Bạn đã học xong bộ thẻ!</p>
                        <Button onClick={() => setCurrentIndex(0)}>Học lại từ đầu</Button>
                    </div>
                )}
            </div>
        </div>
    );
}
